#+title: Software
#+hugo_level_offset: 2
#+hugo_section: pages
#+OPTIONS: ^:{}
#+date: <2025-04-30 Wed>

For all my projects, feel free to create issues and/or reach out for help in
using them. My work is more on algorithm development
rather than direct bioinformatics applications, and so I appreciate getting in
contact with potential users :)

* Tools
- [[https://github.com/RagnarGrootKoerkamp/sassy][*Sassy*]]: SIMD-based approximate string matching
  - Status: done.
  - Search short (10-100, or up to 1kbp) patterns in long texts.
  - Supports =ACTG=, IUPAC, and ASCII.
- [[https://github.com/RagnarGrootKoerkamp/simd-sketch][*simd-sketch*]]: SIMD-based bottom and bucket sketches.
  - Status: basic version done; could use polishing.
  - Builds on =seq-hash=.
- [[https://github.com/RagnarGrootKoerkamp/astar-pairwise-aligner][*A*PA2*]]: Global pairwise alignment based on SIMD, bitpacking, and band-doubling
  - Reliable, but only supports =ACTG= input.

* Bitpacked DNA crates

Crates using 2-bit packed sequence representations and SIMD algorithms on top of them.
- [[https://github.com/rust-seq/packed-seq][*packed_seq*]]: Slowly growing library for managing 2-bit encoded =ACTG= DNA sequences.
  - Also supports 2+1 bit encoding to indicate ambiguous (N) characters.
- [[https://github.com/rust-seq/seq-hash][*seq-hash*]]: Streams over all nt-hashes (or other hashes) of a packed sequences.
- [[https://github.com/rust-seq/simd-minimizers][*simd-minimizers*]]: compute minimizers of a sequence.
  - Support skipping over ambiguous windows.
    
* Further libraries
- [[https://github.com/RagnarGrootKoerkamp/cacheline-ef][*cacheline_ef*]]: Elias-Fano encoding, one cacheline at a time.
- [[https://github.com/RagnarGrootKoerkamp/PtrHash][*PtrHash*]]: A fast minimal perfect hash function.

* Experimental/incomplete
- [[https://github.com/RagnarGrootKoerkamp/minimizers][*Minimizers*]]: reference implementations and experiments for minimizer and sampling
  schemes.
- [[https://github.com/RagnarGrootKoerkamp/sshash-rs][*sshahs-rs*]]: quick but incomplete reimplementation of SSHash.
- [[https://github.com/RagnarGrootKoerkamp/suffix-array-searching][*suffix array searching*]]: static search trees are faster than binary search.
