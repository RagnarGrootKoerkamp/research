#+title: Projects
#+hugo_section: pages
#+OPTIONS: ^:{} num:t
#+date: <2022-04-15 Thu>

* Pairwise alignment
** A*PA
A pairwise aligner based on A*, in collaboration with Pesho Ivanov.
A*PA uses A* with new heuristics to speed up global pairwise alignment.
A*PA2 is much faster by using a DP-based method.

- [[https://github.com/RagnarGrootKoerkamp/astar-pairwise-aligner][*Code*]], [[https://docs.google.com/presentation/d/1_wF9SE8k-sWn6cEqns2I54NYpRbJLt8ev2ip02WMWOA/edit?usp=sharing][*slides*]]
- *A*PA paper*: [[file:../assets/pdf/papers/astarpa.pdf][PDF]], [[https://www.biorxiv.org/content/10.1101/2022.09.19.508631][bioRxiv]], [[https://academic.oup.com/bioinformatics/article/40/3/btae032/7587511][Bioinformatics]] (supplement separate)
- *A*PA2 paper*: [[file:../assets/pdf/papers/astarpa2.pdf][PDF]], [[https://www.biorxiv.org/content/10.1101/2024.03.24.586481][bioRxiv]] (outdated)
- *Blogposts*
  - [[../posts/pairwise-alignment-history/pairwise-alignment-history.org][Pairwise alignment history]]
  - [[../posts/speeding-up-astar/speeding-up-astar.org][Computational volumes]]
  - [[../posts/astarpa2/astarpa2.org][A*PA2]], the blogpost version of the paper.
  - [[file:../posts/local-doubling/local-doubling.org][Local doubling]], an idea that didn't make it into the final paper.
** PA-Bench
PA-Bench is a benchmarking framework for pairwise aligners, in collaboration
with Daniel Liu.
- [[https://github.com/pairwise-alignment/pa-bench][*Code*]]

* Minimizers
** Open-closed mod-minimizer
A minimizer scheme with near-optimal density when $k\gg w$ and good density when $k<w$,
in collaboration
with Giulio Ermanno Pibiri and Daniel Liu.
- [[file:../posts/mod-minimizers/mod-minimizers.org][*Blogpost*]], [[https://github.com/RagnarGrootKoerkamp/minimizers][*Rust code*]], [[https://github.com/jermp/minimizers][*C++ code*]]
- *WABI24 Paper*: [[file:../assets/pdf/papers/modmini.pdf][PDF]], [[https://www.biorxiv.org/content/10.1101/2024.05.25.595898][bioRxiv]], [[file:../assets/pdf/slides/WABI-2024.pdf][slides]]
- *Extended paper: The open-closed mod-minimizer*: [[file:../assets/pdf/papers/open-closed-modmini.pdf][PDF]], [[https://www.biorxiv.org/content/10.1101/2024.11.02.621600v1][bioRxiv]]
** Density lower bound
A near-tight lower bound for the density of forward sampling schemes, in
collaboration with Bryce Kille.
- [[file:../posts/minimizer-lower-bound/minimizer-lower-bound.org][*Blogpost*]], [[https://docs.google.com/presentation/d/1bFe6EWFYNYJHJZpdi4HfhrREt_Wxh4JOXyqR_cWsnio/edit?usp=sharing][*slides*]]
- *Paper*: [[file:../assets/pdf/papers/sampling-lower-bound.pdf][PDF]], [[https://doi.org/10.1101/2024.09.06.611668][bioRxiv]]
- *Code*: [[https://github.com/RagnarGrootKoerkamp/minimizers][minimizer implementations]], [[https://github.com/treangenlab/sampling-scheme-analysis][ILP & analysis]]
** Practical schemes for small $k$
While the mod-minimizer is practical and near-optimal for large $k$, the best
schemes for small $k$ are somewhat slow to compute. Here the goal is to develop
a simple and near-optimal schemes.
-  [[file:../posts/practical-selection-and-sampling/practical-selection-and-sampling.org][*Blogpost*]]

* High throughput bioinformatics
** PTRHash
Fast and small minimal perfect hash function:
- [[../posts/ptrhash/ptrhash.org][*Blogpost*]], [[https://github.com/RagnarGrootKoerkamp/PTRHash][*code*]]
- *Paper*: TODO
** Fast random minimizers
A 10x faster implementation of random minimizers.
- [[../posts/fast-minimizers/fast-minimizers.org][*Blogpost*]], [[https://github.com/RagnarGrootKoerkamp/minimizers][*code*]]
** One Billion Row Challenge
While not bioinformatics, this is a popular post:
- [[../posts/1brc/1brc.org][*Blogpost*]], [[https://github.com/RagnarGrootKoerkamp/1brc][*code*]]
