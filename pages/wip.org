#+title: Past, ongoing, and future research plans
#+hugo_section: /
#+OPTIONS: ^:{}
#+date: <2025-10-06 Mon>

#+toc: headlines 2

Here I list projects that I am working/have worked on. Outdated almost always.
Mostly as a note-to-self to keep things a bit organised.

* In progress (October 2025)
Algorithm engineering (with Peter Sanders' group @ KIT):
- *QuickHeap* ([[../posts/quickheap/quickheap.org][blog]]): a fast SIMD-based heap
- *k-perfect hashing*: quickly map keys to bins of size of $k\in \{8,16\}$,
  mostly extending PtrHash.
- *Static hash sets* (=StaticHashSet<u32>=) with single-cache-miss lookups
- Fast *2-bit rank* for use in =bwa-mem=, with Heng Li.

Tool/library development (with Igor Martayan & Bede Constantinides):
- Updated *packed-seq* ([[https://github.com/rust-seq/packed-seq][gh]]), *seq-hash* ([[https://github.com/rust-seq/seq-hash][gh]]), *simd-minimizers* ([[https://github.com/rust-seq/simd-minimizers/][gh]])
  - Faster handling of short-read data
  - Support for N characters using 2+1bit encoding
  - simd-mini: skip minimizers of windows containing N and other non-ACGT chars.
- *Paraseq* ([[https://github.com/noamteyssier/paraseq][gh]]) PRs:
  - multithreaded unzipping for paired-end input
  - new =ParallelReader= API
  - overall cleanup and deduplication
- *Deacon* ([[https://github.com/bede/deacon][gh]]):
  - speedups from dependencies above
  - more reusing of allocations
  - faster hashset WIP
  - faster IO and on-disk format

Furthermore:
- *Simd-Sketch* ([[https://github.com/RagnarGrootKoerkamp/simd-sketch][gh]], [[../posts/simd-sketch/simd-sketch.org][blog]]):
  - algorithm engineering for fast bottom & bucket sketching
  - TODO: algorithm engineering for fast bottom-sketch distance comparison
  - SIMD for fast bucket-sketch distances
  - experiments (sketch time, comparison time, correlation)
    - 1-bit hashing with many hashes is best
  - WIP: applications/integration with [[https://github.com/karel-brinda/attotree][attotree]] (by Karel BÅ™inda) and [[https://github.com/bacpop/sketchlib.rust][sketchlib]]
    (by John Lees)
  - TODO: fix bias due to 32-bit hash collisions.
  - TODO?: locality sensitive clustering; phylogeny reconstruction
- *NtHash collisions* ([[file:../posts/nthash2-collisions.org][blog]]), with John Lees and Victor Bouza.

Further collaborations (external involvement / supervision):
- Theory: *$O(n\lg n)$ chaining* for anchored edit distance, with Nicola Rizzo.
  - ([[https://www.overleaf.com/project/68bd6809d64fe90ec1d4eacf][private overleaf]])
- Software: *Barbell*: fast & accurate demultiplexing, with Rick Beeloo.
# - Extending *A*Map*, with Sebastian Schmidt.
# - Bringing *Sassy* to practice, with Kornel Labun.


* Dormant
- *Sassy* [cite:@sassy-preprint]: under review.
- *Minimizers*:
  - publish the anti-lex scheme?
  - continue investigation of greedymini to develop 'understandable' equivalent schemes.
  - Find exact optimal schemes for all $k\equiv 1\pmod w$
  - lower bound for local schemes

Code:
- *sshash-rs* ([[https://github.com/RagnarGrootKoerkamp/sshash-rs][gh]])
- *suffix array searching* ([[https://github.com/RagnarGrootKoerkamp/suffix-array-searching][gh]], [[../posts/static-search-tree/static-search-tree.org][post]]) [cite:@sacabench]
  
* Done
See [[./publications.org][publications]].

* Long term plans
If anything here interests you, feel free to reach out for collaborations.

- *engineer STPD* [cite:@stpd]: write a highly optimized implementation.
  - minimizer space?
  - fuzzy version by only using minimizer start positions?
- *Optimal CPU/memory performance* given 3D latency and cooling constraints.
- *Pairwise alignment review paper* based on thesis chapter 2 ([[../../posts/pairwise-alignment][this post]]).
  - *Review on approximate string matching*, [[../posts/approximate-string-matching/approximate-string-matching.org][this post]] (will never happen).
- *Minimizers review paper* based on thesis part 2 ([[../../posts/minimizers][this post]]).

* Abandoned
- *Affine A*PA2*: too much of an overhaul.
- *Spaced $k$-mer similarity*: see [[file:../posts/spaced-kmer-distance.org][this post]].
- *Expected linear time A*PA*: see a draft in [[file:../posts/linear-time-pa/linear-time-pa.org][this post]].
- *Linear memory WFA*:  Instead of storing furthest reaching points
  for all wavefronts, it is sufficient to only store /critical/ points where
  paths split/merge.  This should lower memory usage of WFA to close to linear,
  without needing BiWFA. See [[../posts/linear-memory-wfa/linear-memory-wfa.org][this post]]. This has similar vibes to TALCO [cite:@talco].
- *Local doubling*: see [[../posts/local-doubling/local-doubling.org][this post]].

* Reading list
(I'm too lazy to add proper DOI entries for everything here.)

- Rank and select over mutable bitmaps [cite:@rank-select-mutable-bitmaps]
- Bounded context BWT
  - https://twitter.com/jnalanko/status/1747585917861208266
  - https://github.com/jhhung/kISS
  - k-context BWT: [cite:@k-spectra]
- counting-quotient-filter
- r-index
- fmalign2
- local-kmer-selection
- count-min-sketch (with conservative updates)
  - count-min-sketch.pdf
  - efficient-kmer-counting.pdf
- tinted dbg
- function-assigned masked superstrings

- Turning unit cost into affine cost alignment?
  - Maybe by doubling and refining costs in each iteration? similar to
    cost-scaling flow algorithms?
- [cite:@spaln3]
- [cite:@setsketch]
- [cite:@linear-space-four-russians]
- [cite:@multi-context-seeds]
- [cite:@from-superstring-to-indexing]
- [cite:@col-bwt]
- https://sedgewick.io/ideas/#computer-science-for-all
- Eskemap for A*PA?
- Lyndon trees: https://arxiv.org/abs/2406.16475, Giuseppe Romana
- ForAlign
- [cite:@bwt-compression]
- texrex: https://academic.oup.com/nargab/article/7/2/lqaf039/8115380?login=false
- simd-utils crate (for myers bitpacking, and simd-minimizers)
- Medlib: https://www.biorxiv.org/content/biorxiv/early/2025/05/07/2025.05.01.651420.full.pdf
- K2Rmini
- alignment history: https://pubmed.ncbi.nlm.nih.gov/10890397/
- BGSA pairwise aligner
- Prokrustean graph
- New Durbin & Myers paper
- slp-recompression
- GapsMis pairwise aligner https://www.sciencedirect.com/science/article/pii/S0304397515002200#se0030
- KeBaB: https://link.springer.com/chapter/10.1007/978-3-032-05228-5_2
- https://ashvardanian.com/posts/stringwars-on-gpus/
- TODO: dedup up projects/talks/publications/cv pages




#+print_bibliography:
